library(tidyverse) #varios paquetes compatibles en la represntacion de datos
library(igraph) #network analysis tools for R, python and C/C++
library(statnet) # tools for analysis, simulation and visulization of network
load("union_edges.RData")
load("union_characters.RData")
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
layout <- layout_with_fr(union_graph)
layout <- layout_with_fr(union_graph)
layout <- layout_with_fr(union_graph)
legend("topleft", legend = "", cex = 4, bty = "n", ncol = 1,
title = "Game of Thrones Family Ties")
(union_graph)
(union_graph)
(union_graph)
plot(union_graph, layout = layout)
source('~/repositorios/GameOfThrones/GameOfThrones.R')
source('~/repositorios/GameOfThrones/GameOfThrones.R')
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
layout <- layout_with_fr(union_graph)
plot(union_graph, layout = layout)
rmarkdown::shiny_prerendered_clean('GameOfThrones.R')
library(tidyverse) #varios paquetes compatibles en la represntacion de datos
library(igraph) #network analysis tools for R, python and C/C++
library(statnet) # tools for analysis, simulation and visulization of network
#loaing the edges and nodes' network
load("union_edges.RData")
load("union_characters.RData")
#showing the RData tables
#head(union_edges)
#head(union_characters)
#creating the network from ipgraph
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
#plot
layout <- layout_with_fr(union_graph)
plot(union_graph, layout = layout)
load("union_edges.RData")
load("union_characters.RData")
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
library(igraph)
library(igraph)
install.packages(igraph)
install.packages("igraph")
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
source('~/repositorios/GameOfThrones/GameOfThrones.R')
library(tidyverse) #varios paquetes compatibles en la represntacion de datos
library(igraph) #network analysis tools for R, python and C/C++
library(statnet) # tools for analysis, simulation and visulization of network
load("union_edges.RData")
load("union_characters.RData")
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
layout <- layout_with_fr(union_graph)
plot(union_graph, layout = layout)
source('~/R_projects/GameOfThrones/GameOfThrones.R')
source('~/R_projects/GameOfThrones/GameOfThrones.R')
install.packages("tydiverse")
install.packages("igraph")
View(union_characters)
installed.packages(statnet)
installed.packages("statnet")
installed.packages("tidyverse")
installed.packages("igraph")
install.packages("tidyverse")
installed.packages("tidyverse", dependencies=TRUE)
installed.packages("tidyverse"$Depends)
installed.packages("tidyverse",dependencies=TRUE)
install.packages("tidyverse")
installed.packages("tidyverse",dependencies=TRUE)
installed.packages("igraph")
install.packages("tidyverse",dependencies = TRUe)
install.packages("tidyverse",dependencies = TRUE)
install.packages("httr",dependencies = TRUE)
install.packages("igraph",dependencies = TRUE)
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
graph_from_data_frame
union_graph <- graph_from_data_frame(union_edges, directed = TRUE, vertices = union_characters)
install.packages("igraph",dependencies = TRUE)
setwd("~/R_projects/GameOfThrones")
library("ape", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:ape", unload=TRUE)
install.packages("tidyverse")
install.packages("tidyverse")
